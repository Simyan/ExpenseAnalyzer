// <auto-generated />
using System;
using ExpenseAnalyzer.DAL.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExpenseAnalyzer.Migrations
{
    [DbContext(typeof(ExpenseAnalyzerContext))]
    [Migration("20220721191944_addBankAndReportMetadata")]
    partial class addBankAndReportMetadata
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ExpenseAnalyzer.DAL.Entities.BankMaster", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Uid"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Uid");

                    b.ToTable("BankMaster", (string)null);
                });

            modelBuilder.Entity("ExpenseAnalyzer.DAL.Entities.CategoryMaster", b =>
                {
                    b.Property<short>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("UId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Uid"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Uid");

                    b.ToTable("CategoryMaster", (string)null);
                });

            modelBuilder.Entity("ExpenseAnalyzer.DAL.Entities.ReportMetadataMaster", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Uid"), 1L, 1);

                    b.Property<int>("BankMasterUid")
                        .HasColumnType("int")
                        .HasColumnName("BankMasterUId");

                    b.Property<int>("RowIndex")
                        .HasColumnType("int");

                    b.Property<double>("TableArea")
                        .HasColumnType("float");

                    b.Property<string>("TableHeaders")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("TableIndex")
                        .HasColumnType("int");

                    b.HasKey("Uid");

                    b.HasIndex("BankMasterUid")
                        .IsUnique();

                    b.ToTable("ReportMetadataMaster", (string)null);
                });

            modelBuilder.Entity("ExpenseAnalyzer.DAL.Entities.Transaction", b =>
                {
                    b.Property<long>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("UId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Uid"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<DateTime>("PostingDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime");

                    b.Property<byte>("TypeUid")
                        .HasColumnType("tinyint")
                        .HasColumnName("TypeUId");

                    b.Property<long?>("UserUid")
                        .HasColumnType("bigint");

                    b.Property<long?>("VendorUid")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnName("VendorUId");

                    b.HasKey("Uid");

                    b.HasIndex("TypeUid");

                    b.HasIndex("UserUid");

                    b.HasIndex("VendorUid");

                    b.ToTable("Transaction", (string)null);
                });

            modelBuilder.Entity("ExpenseAnalyzer.DAL.Entities.TypeMaster", b =>
                {
                    b.Property<byte>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasColumnName("UId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("Uid"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Uid");

                    b.ToTable("TypeMaster", (string)null);
                });

            modelBuilder.Entity("ExpenseAnalyzer.DAL.Entities.User", b =>
                {
                    b.Property<long>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("UId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Uid"), 1L, 1);

                    b.Property<int?>("BankMasterUid")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Uid");

                    b.HasIndex("BankMasterUid");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("ExpenseAnalyzer.DAL.Entities.Vendor", b =>
                {
                    b.Property<long>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("UId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Uid"), 1L, 1);

                    b.Property<short?>("CategoryMasterUid")
                        .HasColumnType("smallint")
                        .HasColumnName("CategoryMasterUId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<long?>("UserUid")
                        .HasColumnType("bigint");

                    b.HasKey("Uid");

                    b.HasIndex("CategoryMasterUid");

                    b.HasIndex("UserUid");

                    b.ToTable("Vendor", (string)null);
                });

            modelBuilder.Entity("ExpenseAnalyzer.DAL.Entities.ReportMetadataMaster", b =>
                {
                    b.HasOne("ExpenseAnalyzer.DAL.Entities.BankMaster", "BankMaster")
                        .WithOne("ReportMetadataMaster")
                        .HasForeignKey("ExpenseAnalyzer.DAL.Entities.ReportMetadataMaster", "BankMasterUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BankMaster");
                });

            modelBuilder.Entity("ExpenseAnalyzer.DAL.Entities.Transaction", b =>
                {
                    b.HasOne("ExpenseAnalyzer.DAL.Entities.TypeMaster", "TypeMaster")
                        .WithMany("Transactions")
                        .HasForeignKey("TypeUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExpenseAnalyzer.DAL.Entities.User", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("UserUid");

                    b.HasOne("ExpenseAnalyzer.DAL.Entities.Vendor", "Vendor")
                        .WithMany("Transactions")
                        .HasForeignKey("VendorUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeMaster");

                    b.Navigation("User");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("ExpenseAnalyzer.DAL.Entities.User", b =>
                {
                    b.HasOne("ExpenseAnalyzer.DAL.Entities.BankMaster", "Bank")
                        .WithMany("Users")
                        .HasForeignKey("BankMasterUid");

                    b.Navigation("Bank");
                });

            modelBuilder.Entity("ExpenseAnalyzer.DAL.Entities.Vendor", b =>
                {
                    b.HasOne("ExpenseAnalyzer.DAL.Entities.CategoryMaster", "CategoryMaster")
                        .WithMany("Vendors")
                        .HasForeignKey("CategoryMasterUid");

                    b.HasOne("ExpenseAnalyzer.DAL.Entities.User", "User")
                        .WithMany("Vendors")
                        .HasForeignKey("UserUid");

                    b.Navigation("CategoryMaster");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ExpenseAnalyzer.DAL.Entities.BankMaster", b =>
                {
                    b.Navigation("ReportMetadataMaster")
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("ExpenseAnalyzer.DAL.Entities.CategoryMaster", b =>
                {
                    b.Navigation("Vendors");
                });

            modelBuilder.Entity("ExpenseAnalyzer.DAL.Entities.TypeMaster", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("ExpenseAnalyzer.DAL.Entities.User", b =>
                {
                    b.Navigation("Transactions");

                    b.Navigation("Vendors");
                });

            modelBuilder.Entity("ExpenseAnalyzer.DAL.Entities.Vendor", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
